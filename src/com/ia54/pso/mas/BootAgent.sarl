package com.ia54.pso.mas

import com.ia54.pso.test.util.Solution
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.util.Scopes
import java.util.ArrayList
import java.util.UUID

agent BootAgent {
	uses DefaultContextInteractions, Logging, Lifecycle

	var mainFrame : MainFrame

	var nbSwarm : Integer

	var adressesSwarm : ArrayList<UUID> = new ArrayList();

	on Initialize {
		info("Boot awake !")

		mainFrame = occurrence.parameters.get(0) as MainFrame;
		nbSwarm = MainFrame.NB_SWARM;

		for (var i = 0; i < nbSwarm; i++) {
			adressesSwarm.add(
				spawn(Swarm, mainFrame.particleBodys, MainFrame.WIDTH, MainFrame.HEIGHT, MainFrame.NB_LINES,
					MainFrame.NB_PARTICLES_PER_LINES))
		}

	}

	on GetValue {
		var value = mainFrame.MAP.getValue(occurrence.x, occurrence.y)
		emit(
			new ReturnedValue(new Solution(occurrence.x, occurrence.y, value)),
			Scopes.addresses(occurrence.source)
		)
	}
	
	on SwarmDie {
		info("PSO : Ended")
		killMe
	}

	//	on GetValue {
	// var value = (MainFrame.FUNCTION as FunctionPSO).applyAsDouble(occurrence.x, occurrence.y);
	// emit(new ReturnedValue(new Solution(occurrence.x, occurrence.y, value), occurrence.source))
	//	}
}