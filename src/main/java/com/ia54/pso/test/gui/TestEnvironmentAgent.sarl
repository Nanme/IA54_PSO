/** 
 * 
 */
package main.java.com.ia54.pso.test.gui

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.core.Schedules
import java.util.UUID
import javafx.beans.property.FloatProperty
import javafx.beans.property.SimpleFloatProperty

/** 
 * @author renaud
 * 
 */
 event Hello
 
 event FrameInitialize {
	var mainFrame : MainFrame
	
	new (mainFrame : MainFrame) {
		this.mainFrame = mainFrame
	}
 }
 
 event Move {
 	var x : float
 	var y : float
	
	new(i : float, j : float) {
		this.x = i
		this.y = j
	}
	
 }
 
 event Moved
 
agent BootTestEnvironmentAgent {

	uses DefaultContextInteractions, Lifecycle, Logging
	
	var mainFrame : MainFrame
	var agt : UUID
	
	on Initialize {
		this.mainFrame = occurrence.parameters.get(0) as MainFrame
		spawn(TestGuiAgent, "0", "0")
	}
	
	on Hello {
		info("Hi !")
		emit(new FrameInitialize(this.mainFrame))
		emit(new Move(1, 2))
	}
	
	on Moved {
		info("Agent : Move !")
		emit(new Move(1.0f,1.0f))
	}
	
}

agent TestGuiAgent {
	uses DefaultContextInteractions, Logging, Lifecycle, Schedules

	var x : FloatProperty
	var y : FloatProperty
	

	on Initialize {
		if (occurrence.parameters.isEmpty) {
			info("No Parameters")
		} else {
			
			var xStr = occurrence.parameters.get(0) as String
			var yStr = occurrence.parameters.get(1) as String
			
			
			
			x = new SimpleFloatProperty(Float.parseFloat(xStr))
			y = new SimpleFloatProperty(Float.parseFloat(yStr))
		}
		info("Hello !")
		emit(new Hello)
	}
	
	on FrameInitialize {
		occurrence.mainFrame.rect.xProperty.bind(x)
		occurrence.mainFrame.rect.yProperty.bind(y)
	}
	
	on Move {
		x.value = x.value + occurrence.x
		y.value = y.value + occurrence.y

		in(1000)[
			info("I move !")
			emit(new Moved)
		]
	}

}
